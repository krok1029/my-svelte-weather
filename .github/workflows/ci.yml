name: CI

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Check if TypeScript config exists
        id: check-ts
        run: |
          if [ -f "tsconfig.json" ]; then
            echo "has-ts=true" >> $GITHUB_OUTPUT
          else
            echo "has-ts=false" >> $GITHUB_OUTPUT
          fi

      - name: Check if ESLint config exists
        id: check-eslint
        run: |
          if ls .eslintrc* 1> /dev/null 2>&1 || ls eslint.config.* 1> /dev/null 2>&1; then
            echo "has-eslint=true" >> $GITHUB_OUTPUT
          else
            echo "has-eslint=false" >> $GITHUB_OUTPUT
          fi

      - name: Check if Playwright config exists
        id: check-playwright
        run: |
          if ls playwright.config.* 1> /dev/null 2>&1; then
            echo "has-playwright=true" >> $GITHUB_OUTPUT
          else
            echo "has-playwright=false" >> $GITHUB_OUTPUT
          fi

      - name: TypeScript type check
        if: steps.check-ts.outputs.has-ts == 'true'
        run: yarn check

      - name: ESLint check
        if: steps.check-eslint.outputs.has-eslint == 'true'
        run: yarn format && yarn lint

      # ⭐ 這步會安裝 Playwright 瀏覽器 + 所需系統依賴（含 WebKit）
      - name: Setup Playwright (browsers + system deps)
        if: steps.check-playwright.outputs.has-playwright == 'true'
        uses: microsoft/playwright-github-action@v1

      # 若你的 E2E 需要實際跑站，建議 build 後用 preview（以 SvelteKit/Svelte 為例）
      # 如果你已在 playwright.config.ts 配了 webServer，就可省略這兩步
      - name: Build app
        run: |
          if [ -f "package.json" ] && cat package.json | grep -q "\"build\""; then
            yarn build
          fi

      - name: Start preview server
        if: steps.check-playwright.outputs.has-playwright == 'true'
        run: |
          if yarn -s run | grep -q "^preview"; then
            nohup yarn preview > preview.log 2>&1 &
            # 給 server 一點啟動時間，或改用 wait-on
            sleep 3
          fi

      - name: Run tests
        env:
          PUBLIC_API_TOKEN: ${{ secrets.PUBLIC_API_TOKEN }}
        run: yarn test

      # 失敗時上傳報告與 trace，方便你用 "yarn playwright show-trace" 來看
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            coverage/
            test-results/
            playwright-report/
            preview.log
          if-no-files-found: ignore
          retention-days: 7
